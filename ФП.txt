1.


1.1 
CREATE SCHEMA pandemic;
1.2
USE pandemic;
1.3
SELECT `infectious_cases`.`Entity`,
    `infectious_cases`.`Code`,
    `infectious_cases`.`Year`,
    `infectious_cases`.`Number_yaws`,
    `infectious_cases`.`polio_cases`,
    `infectious_cases`.`cases_guinea_worm`,
    `infectious_cases`.`Number_rabies`,
    `infectious_cases`.`Number_malaria`,
    `infectious_cases`.`Number_hiv`,
    `infectious_cases`.`Number_tuberculosis`,
    `infectious_cases`.`Number_smallpox`,
    `infectious_cases`.`Number_cholera_cases`
FROM `pandemic`.`infectious_cases`;


2.
CREATE TABLE entity_locations (
    entity_id INT AUTO_INCREMENT PRIMARY KEY,
    entity_name VARCHAR(255),
    entity_code VARCHAR(10)
);
CREATE TABLE case_data (
    case_id INT AUTO_INCREMENT PRIMARY KEY,
    entity_id INT,
    year INT,
    number_yaws VARCHAR(255),
    polio_cases INT,
    cases_guini_worm INT,
    number_rabies VARCHAR(255),
    number_malaria VARCHAR(255),
    number_hiv VARCHAR(255),
    number_tuberculosis VARCHAR(255),
    number_smallpox VARCHAR(255),
    number_cholera_cases VARCHAR(255),
    FOREIGN KEY (entity_id) REFERENCES entity_locations(entity_id)
);


2.1


INSERT INTO entity_locations ( entity_name, entity_code)
SELECT DISTINCT ic.entity, ic.code
FROM infectious_cases ic
WHERE NOT EXISTS (
    SELECT 1 FROM entity_locations el
    WHERE el.entity_name = ic.entity AND el.entity_code = ic.code
);


2.2


INSERT INTO case_data (entity_id, year, number_yaws, polio_cases, cases_guini_worm, number_rabies, number_malaria, number_hiv, number_tuberculosis, number_smallpox, number_cholera_cases)
SELECT 
    el.entity_id,
    ic.year,
    ic.number_yaws,
    ic.polio_cases,
    ic.cases_guinea_worm,
    ic.number_rabies,
    ic.number_malaria,
    ic.number_hiv,
    ic.number_tuberculosis,
    ic.number_smallpox,
    ic.number_cholera_cases
FROM infectious_cases ic
JOIN entity_locations el ON ic.entity = el.entity_name AND ic.code = el.entity_code;


3.
SELECT 
    entity_id,
    AVG(CAST(number_rabies AS UNSIGNED)) AS avg_rabies,
    MIN(CAST(number_rabies AS UNSIGNED)) AS min_rabies,
    MAX(CAST(number_rabies AS UNSIGNED)) AS max_rabies,
    SUM(CAST(number_rabies AS UNSIGNED)) AS sum_rabies
FROM 
    (
        SELECT 
            entity_id,
            number_rabies
        FROM 
            case_data
        WHERE 
            number_rabies != ''
    ) AS filtered_data
GROUP BY 
    entity_id
ORDER BY 
    avg_rabies DESC
LIMIT 
    10;


4.


SELECT 
    DISTINCT CONCAT(year, '-01-01') AS modified_year,
    CURDATE() AS current_datetime,
    TIMESTAMPDIFF(YEAR, CONCAT(year, '-01-01'), CURDATE()) AS year_diff
FROM infectious_cases
ORDER BY modified_year DESC;




5.


DELIMITER //
CREATE FUNCTION calculate_years(year INT) 
RETURNS INT
READS SQL DATA
BEGIN
    RETURN TIMESTAMPDIFF(YEAR, CONCAT(year, '-01-01'), CURDATE());
END//
DELIMITER ;


SELECT year,
calculate_years(year) AS years_since
FROM infectious_cases;